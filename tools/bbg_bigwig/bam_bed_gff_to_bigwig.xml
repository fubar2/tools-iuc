<tool id="bbgtobigwig" name="Convert BAM/BED/GFF to BigWig" version="0.1" profile="22.05"> 
    <requirements>
        <requirement type="package" version="455">ucsc-bedgraphtobigwig</requirement>
        <requirement type="package" version="2.31.1">bedtools</requirement>
        <requirement type="package" version="9.5">coreutils</requirement>
    </requirements>
    <required_files>
        <include path="gff_to_bed_converter.py"/>
    </required_files>
    <command detect_errors="aggressive"><![CDATA[
#if $input1.ext in ['gff', 'gff3']:
    python '$__tool_directory__/gff_to_bed_converter.py' < '$input1' > input2 && 
#else:
    ln -s '$input1' input2 &&
#end if
#if $input1.ext == "bam":
    bedtools genomecov -bg -split -ibam input2 | 
#else
    #if $hist_or_builtin.genosrc == "indexed":
        bedtools genomecov -bg -i input2 -g '$chromInfo' |
    #else:
        bedtools genomecov -bg -i input2 -g '$chromfile' |
    #end if
#end if
LC_COLLATE=C sort -k1,1 -k2,2n > temp.bg &&
#if $hist_or_builtin.genosrc == "indexed":
    bedGraphToBigWig temp.bg '$chromInfo' '$output'
#else:
    bedGraphToBigWig temp.bg '$chromfile' '$output'
#end if

    ]]></command>
    <inputs>
        <conditional name="hist_or_builtin">
            <param name="genosrc" type="select" label="Is the input aligned to a built-in or custom reference genome?" 
                help="If no dbkey, choose the genome from your history and supply a chromosome lengths file?">
                <option selected="True" value="indexed">Input data was made with a built-in genome or already has a custom genome dbkey</option>
                <option value="history">Input data mapped on a genome from the current history. The chromosome lengths file is also in the history</option>
            </param>
            <when value="indexed">
                <param name="input1" type="data" format="bam,unsorted.bam,bed,gff,gff3" label="bam/bed/gff to convert">
                    <validator type="unspecified_build" />
                </param>
            </when>
            <when value="history">
                <param name="input1" type="data" format="bam,unsorted.bam,bed,gff,gff3" label="bam/bed/gff to convert"/>
                <param name="chromfile" type="data" format="len,txt,tabular" label="Chromosome length file" 
                   help="Sequence lengths for the history reference are required to make a bigwig. Compute sequence length tool makes these from fasta files"/>
            </when>
        </conditional>
    </inputs>
    <outputs>
        <data name="output" format="bigwig"/>
    </outputs>
    <tests>
        <test>
            <conditional name="hist_or_builtin">
                <param name="genosrc" value="indexed"/>
                <param name="input1" value="srma_out2.bam" dbkey="hg17"/>
            </conditional>
            <output name="output" value="srma_out2.bigwig" compare="sim_size"/>
        </test>
        <test>
            <conditional name="hist_or_builtin">
                <param name="genosrc" value="history"/>
                <param name="input1" value="srma_out2.bam"/>
                <param name="chromfile" value="testing.len"/>
            </conditional>
            <output name="output" value="srma_out2.bigwig" compare="sim_size"/>
        </test>
        <test>
            <conditional name="hist_or_builtin">
                <param name="genosrc" value="history"/>
                <param name="input1" value="5.gff3"/>
                <param name="chromfile" value="testing.len"/>
            </conditional>
            <output name="output" value="merlin.gff.bigwig" compare="sim_size"/>
        </test>
        <test>
            <conditional name="hist_or_builtin">
                <param name="genosrc" value="history"/>
                <param name="input1" value="test-6.bed"/>
                <param name="chromfile" value="testing.len"/>
            </conditional>
            <output name="output" value="merlin.bed.bigwig" compare="sim_size"/>
        </test>
    </tests>
    <help>

   Converter for bam, bed or gff to bigwig
   If the input is bed or bam but does not have a dbkey, a chromosome lengths file is needed.
   This can be useful in workflows with assemblies in progress before a stable reference is available for
   a custom or built in reference dbkey.

    </help>
    <citations>
        <citation type="doi">10.1093/nar/gkae410</citation>
    </citations>
</tool>
